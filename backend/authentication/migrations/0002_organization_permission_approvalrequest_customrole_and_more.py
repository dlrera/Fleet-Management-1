# Generated by Django 5.0.1 on 2025-08-18 19:09

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('domain', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('settings', models.JSONField(default=dict)),
                ('identity_settings', models.JSONField(default=dict)),
                ('security_settings', models.JSONField(default=dict)),
                ('retention_days', models.IntegerField(default=365)),
                ('require_mfa', models.BooleanField(default=False)),
                ('require_approval_for_elevation', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=50)),
                ('risk_level', models.IntegerField(default=1)),
                ('requires_mfa', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['category', 'key'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_key', models.CharField(max_length=100)),
                ('parameters', models.JSONField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approval_notes', models.TextField(blank=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('decided_at', models.DateTimeField(blank=True, null=True)),
                ('auto_execute', models.BooleanField(default=False)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('approver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approvals_given', to=settings.AUTH_USER_MODEL)),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_system', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_roles', to=settings.AUTH_USER_MODEL)),
                ('inherited_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.customrole')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_roles', to='authentication.organization')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='APIToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('scopes', models.JSONField(default=list)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('last_used_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('revoked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_tokens', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_tokens', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.customrole')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effect', models.CharField(choices=[('allow', 'Allow'), ('deny', 'Deny')], default='allow', max_length=10)),
                ('conditions', models.JSONField(blank=True, null=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.customrole')),
            ],
            options={
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.AddField(
            model_name='customrole',
            name='permissions',
            field=models.ManyToManyField(through='authentication.RolePermission', to='authentication.permission'),
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('scope_type', models.CharField(choices=[('global', 'Global'), ('organization', 'Organization'), ('region', 'Region'), ('depot', 'Depot'), ('vehicle_group', 'Vehicle Group'), ('custom', 'Custom')], max_length=20)),
                ('criteria', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scopes', to='authentication.organization')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='authentication.scope')),
            ],
            options={
                'ordering': ['scope_type', 'name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SessionInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(max_length=100, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('is_mfa_verified', models.BooleanField(default=False)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='UserRoleAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_temporary', models.BooleanField(default=False)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.customrole')),
                ('scope', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.scope')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('actor_email', models.EmailField(max_length=254)),
                ('actor_role', models.CharField(max_length=50)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('permission_granted', 'Permission Granted'), ('permission_denied', 'Permission Denied'), ('role_assigned', 'Role Assigned'), ('role_removed', 'Role Removed'), ('invitation_sent', 'Invitation Sent'), ('invitation_accepted', 'Invitation Accepted'), ('user_suspended', 'User Suspended'), ('user_activated', 'User Activated'), ('impersonate_start', 'Impersonation Started'), ('impersonate_end', 'Impersonation Ended'), ('api_token_created', 'API Token Created'), ('api_token_revoked', 'API Token Revoked'), ('mfa_enabled', 'MFA Enabled'), ('mfa_disabled', 'MFA Disabled'), ('export_data', 'Data Exported')], db_index=True, max_length=50)),
                ('resource_type', models.CharField(db_index=True, max_length=100)),
                ('resource_id', models.CharField(db_index=True, max_length=100)),
                ('resource_name', models.CharField(max_length=255)),
                ('before_state', models.JSONField(blank=True, null=True)),
                ('after_state', models.JSONField(blank=True, null=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_id', models.UUIDField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('reason', models.TextField(blank=True)),
                ('approval_id', models.UUIDField(blank=True, null=True)),
                ('risk_score', models.IntegerField(default=0)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'permissions': [('view_audit_logs', 'Can view audit logs'), ('export_audit_logs', 'Can export audit logs')],
                'indexes': [models.Index(fields=['actor', '-timestamp'], name='authenticat_actor_i_ebb24b_idx'), models.Index(fields=['resource_type', 'resource_id'], name='authenticat_resourc_b40bc0_idx'), models.Index(fields=['action', '-timestamp'], name='authenticat_action_2f91bd_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='customrole',
            unique_together={('organization', 'name')},
        ),
    ]
