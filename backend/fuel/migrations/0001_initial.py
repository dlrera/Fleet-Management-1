# Generated by Django 5.0.1 on 2025-08-18 18:02

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assets', '0002_asset_image_asset_thumbnail'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UnitsPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('distance_unit', models.CharField(choices=[('mi', 'Miles'), ('km', 'Kilometers')], default='mi', max_length=5)),
                ('volume_unit', models.CharField(choices=[('gal', 'Gallons'), ('L', 'Liters')], default='gal', max_length=5)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], default='USD', max_length=5)),
                ('low_mpg_threshold_percent', models.DecimalField(decimal_places=2, default=Decimal('25.00'), help_text='Alert if MPG drops by this percentage', max_digits=5)),
                ('high_price_percentile', models.DecimalField(decimal_places=2, default=Decimal('95.00'), help_text='Alert if price exceeds this percentile', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Units Policy',
                'verbose_name_plural': 'Units Policies',
            },
        ),
        migrations.CreateModel(
            name='FuelSite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('site_type', models.CharField(choices=[('onsite', 'On-site Tank'), ('retail', 'Retail Station'), ('charging', 'EV Charging Station')], default='retail', max_length=20)),
                ('address', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('time_zone', models.CharField(default='UTC', max_length=50)),
                ('products_supported', models.JSONField(default=list, help_text='List of fuel products available')),
                ('controller_type', models.CharField(blank=True, help_text='FuelMaster, Veeder-Root, etc.', max_length=100, null=True)),
                ('external_id', models.CharField(blank=True, help_text='External system identifier', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['site_type'], name='fuel_fuelsi_site_ty_61d3e9_idx'), models.Index(fields=['external_id'], name='fuel_fuelsi_externa_8b8a92_idx')],
            },
        ),
        migrations.CreateModel(
            name='FuelTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('entry_source', models.CharField(choices=[('manual', 'Manual Entry'), ('csv_import', 'CSV Import'), ('fuel_card', 'Fuel Card Integration'), ('tank_controller', 'Tank Controller'), ('ev_charger_api', 'EV Charger API')], default='manual', max_length=20)),
                ('product_type', models.CharField(choices=[('gasoline', 'Gasoline'), ('diesel', 'Diesel'), ('def', 'Diesel Exhaust Fluid (DEF)'), ('cng', 'Compressed Natural Gas'), ('lng', 'Liquefied Natural Gas'), ('propane', 'Propane'), ('electricity', 'Electricity'), ('other', 'Other')], max_length=20)),
                ('volume', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('unit', models.CharField(choices=[('gal', 'Gallons'), ('L', 'Liters'), ('kWh', 'Kilowatt Hours')], default='gal', max_length=10)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=4, help_text='Price per unit (cents for currency)', max_digits=8, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Total cost in currency minor units (cents)', max_digits=10, null=True)),
                ('odometer', models.DecimalField(blank=True, decimal_places=1, help_text='Odometer reading in miles/km', max_digits=10, null=True)),
                ('engine_hours', models.DecimalField(blank=True, decimal_places=1, help_text='Engine hours at time of fill', max_digits=10, null=True)),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('location_label', models.CharField(blank=True, help_text='Site name or address', max_length=255, null=True)),
                ('payment_ref', models.CharField(blank=True, help_text='Card transaction ID or receipt number', max_length=100, null=True)),
                ('vendor', models.CharField(blank=True, help_text='Station name or vendor', max_length=200, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('distance_delta', models.DecimalField(blank=True, decimal_places=1, help_text='Distance since last fuel transaction', max_digits=10, null=True)),
                ('mpg', models.DecimalField(blank=True, decimal_places=2, help_text='Miles per gallon for this fill', max_digits=6, null=True)),
                ('cost_per_mile', models.DecimalField(blank=True, decimal_places=4, help_text='Cost per mile for this transaction', max_digits=8, null=True)),
                ('fuel_per_hour', models.DecimalField(blank=True, decimal_places=3, help_text='Fuel consumption per engine hour', max_digits=6, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_transactions', to='assets.asset')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fuel_transactions_created', to=settings.AUTH_USER_MODEL)),
                ('fuel_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fuel.fuelsite')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FuelAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('low_mpg', 'Low MPG'), ('odometer_rollback', 'Odometer Rollback'), ('high_price', 'High Unit Price'), ('missing_odometer', 'Missing Odometer'), ('duplicate_transaction', 'Possible Duplicate'), ('unusual_volume', 'Unusual Volume')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='open', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_alerts', to='assets.asset')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fuel_alerts_resolved', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='fuel.fueltransaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FuelCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('wex', 'WEX'), ('voyager', 'Voyager'), ('comdata', 'Comdata'), ('other', 'Other')], max_length=20)),
                ('card_last4', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator('^\\d{4}$')])),
                ('pin_policy', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('lost', 'Lost/Stolen')], default='active', max_length=20)),
                ('external_id', models.CharField(help_text="Provider's card identifier", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fuel_cards', to='assets.asset')),
            ],
            options={
                'ordering': ['provider', 'card_last4'],
                'unique_together': {('provider', 'external_id')},
            },
        ),
        migrations.AddIndex(
            model_name='fueltransaction',
            index=models.Index(fields=['asset', '-timestamp'], name='fuel_fueltr_asset_i_5f575c_idx'),
        ),
        migrations.AddIndex(
            model_name='fueltransaction',
            index=models.Index(fields=['product_type'], name='fuel_fueltr_product_f1f289_idx'),
        ),
        migrations.AddIndex(
            model_name='fueltransaction',
            index=models.Index(fields=['entry_source'], name='fuel_fueltr_entry_s_46863c_idx'),
        ),
        migrations.AddIndex(
            model_name='fueltransaction',
            index=models.Index(fields=['timestamp'], name='fuel_fueltr_timesta_684595_idx'),
        ),
        migrations.AddIndex(
            model_name='fueltransaction',
            index=models.Index(fields=['created_at'], name='fuel_fueltr_created_c8491e_idx'),
        ),
        migrations.AddConstraint(
            model_name='fueltransaction',
            constraint=models.UniqueConstraint(fields=('asset', 'timestamp', 'volume', 'total_cost'), name='unique_fuel_transaction'),
        ),
        migrations.AddIndex(
            model_name='fuelalert',
            index=models.Index(fields=['asset', 'status'], name='fuel_fuelal_asset_i_1996df_idx'),
        ),
        migrations.AddIndex(
            model_name='fuelalert',
            index=models.Index(fields=['alert_type', 'severity'], name='fuel_fuelal_alert_t_c8f739_idx'),
        ),
        migrations.AddIndex(
            model_name='fuelalert',
            index=models.Index(fields=['status', 'created_at'], name='fuel_fuelal_status_44ab7d_idx'),
        ),
    ]
