# Generated by Django 4.2.23 on 2025-08-17 04:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import drivers.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assets', '0002_asset_image_asset_thumbnail'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('driver_id', models.CharField(help_text='Unique driver identifier', max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('date_of_birth', models.DateField()),
                ('hire_date', models.DateField()),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('on_leave', 'On Leave')], default='active', max_length=20)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_number', models.CharField(blank=True, max_length=50, null=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_type', models.CharField(choices=[('class_a', 'Class A CDL'), ('class_b', 'Class B CDL'), ('class_c', 'Class C CDL'), ('chauffeur', 'Chauffeur License'), ('regular', 'Regular License'), ('motorcycle', 'Motorcycle License')], max_length=20)),
                ('license_expiration', models.DateField()),
                ('license_state', models.CharField(help_text='Two-letter state code', max_length=2)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(help_text='Two-letter state code', max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('emergency_contact_name', models.CharField(max_length=200)),
                ('emergency_contact_phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_relationship', models.CharField(max_length=100)),
                ('profile_photo', models.ImageField(blank=True, help_text='Driver profile photo (recommended: 300x300px, max 2MB)', null=True, upload_to=drivers.models.driver_photo_upload_path)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
                'ordering': ['driver_id'],
            },
        ),
        migrations.CreateModel(
            name='DriverViolation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_type', models.CharField(choices=[('traffic', 'Traffic Violation'), ('moving', 'Moving Violation'), ('parking', 'Parking Violation'), ('equipment', 'Equipment Violation'), ('safety', 'Safety Violation'), ('drug_alcohol', 'Drug/Alcohol Violation'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('major', 'Major'), ('serious', 'Serious'), ('critical', 'Critical')], max_length=20)),
                ('description', models.TextField()),
                ('violation_date', models.DateField()),
                ('citation_number', models.CharField(blank=True, max_length=100, null=True)),
                ('fine_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_date', models.DateField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.asset')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='drivers.driver')),
            ],
            options={
                'ordering': ['-violation_date'],
            },
        ),
        migrations.CreateModel(
            name='DriverAssetAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_type', models.CharField(choices=[('primary', 'Primary Driver'), ('secondary', 'Secondary Driver'), ('temporary', 'Temporary Assignment'), ('backup', 'Backup Driver')], default='primary', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('assigned_date', models.DateTimeField()),
                ('unassigned_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.CharField(help_text='Person who made the assignment', max_length=200)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_assignments', to='assets.asset')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_assignments', to='drivers.driver')),
            ],
            options={
                'ordering': ['-assigned_date'],
            },
        ),
        migrations.CreateModel(
            name='DriverCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certification_type', models.CharField(choices=[('cdl_passenger', 'CDL Passenger Endorsement'), ('cdl_school_bus', 'CDL School Bus Endorsement'), ('cdl_hazmat', 'CDL Hazmat Endorsement'), ('cdl_air_brakes', 'CDL Air Brakes'), ('defensive_driving', 'Defensive Driving'), ('first_aid', 'First Aid'), ('cpr', 'CPR'), ('drug_alcohol_awareness', 'Drug & Alcohol Awareness'), ('safety_training', 'Safety Training'), ('dot_medical', 'DOT Medical Certificate'), ('other', 'Other')], max_length=30)),
                ('certification_number', models.CharField(blank=True, max_length=100, null=True)),
                ('certification_name', models.CharField(help_text="Custom certification name if 'other'", max_length=200)),
                ('issued_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('issuing_authority', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('suspended', 'Suspended'), ('revoked', 'Revoked')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('certificate_document', models.FileField(blank=True, help_text='Upload certificate document (PDF, JPG, PNG)', null=True, upload_to='drivers/certifications/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='drivers.driver')),
            ],
            options={
                'ordering': ['-expiration_date'],
                'unique_together': {('driver', 'certification_type', 'certification_number')},
            },
        ),
    ]
